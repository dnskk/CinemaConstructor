@model CinemaConstructor.Models.FilmSessionViewModels.FilmSessionCreateViewModel

@{
    ViewData["Title"] = "Create film sessions";
}

<link rel="stylesheet" href="plugins/select2/css/select2.min.css">
<link rel="stylesheet" href="plugins/select2-bootstrap4-theme/select2-bootstrap4.min.css">
<script src="plugins/select2/js/select2.full.min.js"></script>


<h2>@ViewData["Title"]</h2>
<hr />

<form asp-controller="FilmSession" asp-action="Create" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal">
    @for (var i = 0; i < Model.Films.Count; i++)
    {
        @Html.HiddenFor(model => Model.Films[i].Id)
        @Html.HiddenFor(model => Model.Films[i].Title)
    }
    @Html.HiddenFor(model => Model.CompanyId)
    <div class="form-group">
        <label asp-for="SelectedFilm" class="col-md-2 control-label"></label>
        <div class="col-md-10">
            <select asp-for="SelectedFilm" class="form-control">
                @foreach (var film in Model.Films)
                {
                    <option value="@film.Id">@film.Title</option>
                }
            </select>
        </div>
    </div>
    <div class="form-group">
        <label asp-for="SelectedHall" class="col-md-2 control-label"></label>
        <div class="col-md-10">
            <select asp-for="SelectedHall" class="form-control">
                @foreach (var group in Model.GroupedHalls)
                {
                    <option disabled>@group.Key</option>
                    @foreach (var hall in group)
                    {
                        <option value="@hall.Id">@hall.Name</option>
                    }
                }
            </select>
        </div>
    </div>
    <div class="form-group">
        <label asp-for="Date" class="col-md-2 control-label"></label>
        <div class="input-group col-md-10">
            <div class="input-group-prepend">
                <span class="input-group-text">
                    <i class="far fa-calendar-alt"></i>
                </span>
            </div>
            <input asp-for="Date" type="text" class="form-control float-right" id="date">
        </div>
    </div>
    <div class="form-group">
        <label asp-for="Time" class="col-md-2 control-label"></label>
        <div class="input-group col-md-10">
            <input asp-for="Time" class="form-control" type="hidden" id="time" />
            <span asp-validation-for="Time" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group">
        <label asp-for="Price" class="col-md-2 control-label"></label>
        <div class="col-md-10">
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text">₽</span>
                </div>
                <input asp-for="Price" class="form-control" id="priceInput" />
            </div>
            <span asp-validation-for="Price" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="submit" class="btn btn-primary">Create</button>
        </div>
    </div>
</form>

<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

<script src="/js/jquery.durationpicker.min.js"></script>
<link rel="stylesheet" type="text/css" src="/css/jquery.durationpicker.min.css" />
<script>
    $(function () {
        $('#date').datepicker();
    });
    $('#time').durationPicker({
        showDays: false,
        showHours: true,
        showMins: true
    });
    function setInputFilter(textbox, inputFilter) {
        ["input", "keydown", "keyup", "mousedown", "mouseup", "select", "contextmenu", "drop"].forEach(function(event) {
            textbox.addEventListener(event, function() {
                if (inputFilter(this.value)) {
                    this.oldValue = this.value;
                    this.oldSelectionStart = this.selectionStart;
                    this.oldSelectionEnd = this.selectionEnd;
                } else if (this.hasOwnProperty("oldValue")) {
                    this.value = this.oldValue;
                    this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);
                } else {
                    this.value = "";
                }
            });
        });
    }

    setInputFilter(document.getElementById("priceInput"), function(value) {
        return /^\d*\.?\d*$/.test(value);
    });
</script>